{
  "generator": "fresh-playwright-project",
  "size": 13561893,
  "timing": {
    "startTime": "2022-10-07T00:55:18.994Z",
    "finishTime": "2022-10-07T00:55:41.041Z"
  },
  "log": [
    "pwuser@factory:/workspace$ bash -exc 'yarn create playwright fresh-app --quiet --lang=TypeScript --gha --no-browsers\r",
    "> cd fresh-app\r",
    "> yarn playwright test' < /dev/null; echo 'Finished running generator.'\r",
    "+ yarn create playwright fresh-app --quiet --lang=TypeScript --gha --no-browsers\r",
    "cd /workspace/fresh-app/playwright-report\r",
    "\u001b[1myarn create v1.22.19\r",
    "\u001b[22;2m[1/4]\u001b[0m Resolving packages...\r",
    "\u001b[2m[2/4]\u001b[0m Fetching packages...\r",
    "\u001b[2m[3/4]\u001b[0m Linking dependencies...\r",
    "\u001b[2m[4/4]\u001b[0m Building fresh packages...\r",
    "\r",
    "\u001b[32msuccess\u001b[0m Installed \"create-playwright@1.17.119\" with binaries:\r",
    "      - create-playwright\r",
    "[##] 2/2\u001b[33mGetting started with writing \u001b[1mend-to-end\u001b[22m tests with \u001b[1mPlaywright\u001b[22m:\r",
    "\u001b[0mInitializing project in 'fresh-app'\r",
    "Initializing Yarn project (yarn init -y)â€¦\r",
    "\u001b[1myarn init v1.22.19\r",
    "\u001b[33;22mwarning\u001b[0m The yes flag has been set. This will automatically answer yes to all questions, which may have security implications.\r",
    "\u001b[32msuccess\u001b[0m Saved package.json\r",
    "Done in 0.03s.\r",
    "Installing Playwright Test (yarn add --dev @playwright/test)â€¦\r",
    "\u001b[1myarn add v1.22.19\r",
    "\u001b[34;22minfo\u001b[0m No lockfile found.\r",
    "\u001b[2m[1/4]\u001b[0m Resolving packages...\r",
    "\u001b[2m[2/4]\u001b[0m Fetching packages...\r",
    "\u001b[2m[3/4]\u001b[0m Linking dependencies...\r",
    "\u001b[2m[4/4]\u001b[0m Building fresh packages...\r",
    "\r",
    "\u001b[32msuccess\u001b[0m Saved lockfile.\r",
    "\u001b[32msuccess\u001b[0m Saved 3 new dependencies.\r",
    "\u001b[34minfo\u001b[0m Direct dependencies\r",
    "â””â”€ @playwright/test@1.26.1\r",
    "\u001b[34minfo\u001b[0m All dependencies\r",
    "â”œâ”€ @playwright/test@1.26.1\r",
    "â”œâ”€ @types/node@18.8.3\r",
    "â””â”€ playwright-core@1.26.1\r",
    "Done in 1.07s.\r",
    "Downloading browsers (npx playwright install)â€¦\r",
    "\u001b[90mWriting fresh-app/playwright.config.ts.\r",
    "Writing fresh-app/.github/workflows/playwright.yml.\r",
    "Writing fresh-app/tests/example.spec.ts.\r",
    "Writing fresh-app/tests-examples/demo-todo-app.spec.ts.\r",
    "Writing fresh-app/package.json.\r",
    "\u001b[32mâœ” Success!\u001b[0m \u001b[1mCreated a Playwright Test project at /workspace/fresh-app\r",
    "\r",
    "\u001b[0mInside that directory, you can run several commands:\r",
    "\r",
    "  \u001b[36myarn playwright test\r",
    "\u001b[0m    Runs the end-to-end tests.\r",
    "\r",
    "  \u001b[36myarn playwright test --project=chromium\r",
    "\u001b[0m    Runs the tests only on Desktop Chrome.\r",
    "\r",
    "  \u001b[36myarn playwright test example\r",
    "\u001b[0m    Runs the tests in a specific file.\r",
    "\r",
    "  \u001b[36myarn playwright test --debug\r",
    "\u001b[0m    Runs the tests in debug mode.\r",
    "\r",
    "  \u001b[36myarn playwright codegen\r",
    "\u001b[0m    Auto generate tests with Codegen.\r",
    "\r",
    "We suggest that you begin by typing:\r",
    "\r",
    "  \u001b[36m  cd fresh-app\r",
    "  yarn playwright test\r",
    "\r",
    "\u001b[0mAnd check out the following files:\r",
    "  - ./fresh-app/tests/example.spec.ts - Example end-to-end test\r",
    "  - ./fresh-app/tests-examples/demo-todo-app.spec.ts - Demo Todo App end-to-end tests\r",
    "  - ./fresh-app/playwright.config.ts - Playwright Test configuration\r",
    "\r",
    "Visit https://playwright.dev/docs/intro for more information. âœ¨\r",
    "\r",
    "Happy hacking! ðŸŽ­\r",
    "Done in 2.88s.\r",
    "+ cd fresh-app\r",
    "+ yarn playwright test\r",
    "\u001b[1myarn run v1.22.19\r",
    "\u001b[22;2m$ /workspace/fresh-app/node_modules/.bin/playwright test\r",
    "\u001b[0m/opt/factory/bin/screenshot 'http-server' 8080 || true; echo 'Finished taking screenshot.'\r",
    "exit\r",
    "\r",
    "Running 3 tests using 1 worker\r",
    "\r",
    "\u001b[32m  3 passed\u001b[39;2m (9s)\r",
    "\r",
    "\u001b[0mTo open last HTML report run:\r",
    "\r",
    "\u001b[36m  npx playwright show-report\r",
    "\r",
    "\u001b[0mDone in 9.55s.\r",
    "Finished running generator.\r",
    "pwuser@factory:/workspace$ cd /workspace/fresh-app/playwright-report\r",
    "pwuser@factory:/workspace/fresh-app/playwright-report$ /opt/factory/bin/screenshot 'http-server' 8080 || true; echo 'Finished taking screenshot.'\r",
    "+ start-test http-server :8080 'cd /workspace && (playwright screenshot --viewport-size=1280,720 http://localhost:8080 /workspace/screenshot.png; playwright screenshot --viewport-size=1280,720 --wait-for-timeout=4096 http://localhost:8080 /workspace/screenshot.png)'\r",
    "1: starting server using command \"http-server\"\r",
    "and when url \"[ 'http://localhost:8080' ]\" is responding with HTTP status code 200\r",
    "running tests using command \"cd /workspace && (playwright screenshot --viewport-size=1280,720 http://localhost:8080 /workspace/screenshot.png; playwright screenshot --viewport-size=1280,720 --wait-for-timeout=4096 http://localhost:8080 /workspace/screenshot.png)\"\r",
    "\r",
    "\u001b[33mStarting up http-server, serving \u001b[36m./\r",
    "\r",
    "\u001b[33mhttp-server version: \u001b[36m14.1.1\r",
    "\r",
    "\u001b[33mhttp-server settings: \r",
    "CORS: \u001b[31mdisabled\r",
    "\u001b[33mCache: \u001b[36m3600 seconds\r",
    "\u001b[33mConnection Timeout: \u001b[36m120 seconds\r",
    "\u001b[33mDirectory Listings: \u001b[36mvisible\r",
    "\u001b[33mAutoIndex: \u001b[36mvisible\r",
    "\u001b[33mServe GZIP Files: \u001b[31mfalse\r",
    "\u001b[33mServe Brotli Files: \u001b[31mfalse\r",
    "\u001b[33mDefault File Extension: \u001b[31mnone\r",
    "\r",
    "\u001b[33mAvailable on:\r",
    "\u001b[0m  http://127.0.0.1:\u001b[32m8080\r",
    "\u001b[0m  http://172.17.0.3:\u001b[32m8080\r",
    "\u001b[0mHit CTRL-C to stop the server\r",
    "\r",
    "[2022-10-07T00:55:35.336Z]  \"\u001b[36mHEAD\u001b[0m \u001b[36m/\u001b[0m\" \"axios/0.21.4\"\r",
    "(node:1104) [DEP0066] DeprecationWarning: OutgoingMessage.prototype._headers is deprecated\r",
    "(Use `node --trace-deprecation ...` to show where the warning was created)\r",
    "Navigating to http://localhost:8080\r",
    "[2022-10-07T00:55:35.800Z]  \"\u001b[36mGET\u001b[0m \u001b[36m/\u001b[0m\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/106.0.5249.30 Safari/537.36\"\r",
    "Capturing screenshot into /workspace/screenshot.png\r",
    "Navigating to http://localhost:8080\r",
    "[2022-10-07T00:55:36.476Z]  \"\u001b[36mGET\u001b[0m \u001b[36m/\u001b[0m\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/106.0.5249.30 Safari/537.36\"\r",
    "Waiting for timeout 4096...\r",
    "Capturing screenshot into /workspace/screenshot.png\r",
    "\u001b[31mhttp-server stopped.\r",
    "\u001b[0mFinished taking screenshot.\r",
    "pwuser@factory:/workspace/fresh-app/playwright-report$ exit\r",
    "exit\r",
    ""
  ],
  "description": "Fresh Playwright Test project with TypeScript, automatically generated everyday with \"yarn create playwright\"",
  "buildUrl": "https://github.com/fresh-app/factory/actions/runs/3201479546",
  "frameworkUrl": "https://playwright.dev/",
  "frameworkDocumentationUrl": "https://playwright.dev/docs/intro"
}